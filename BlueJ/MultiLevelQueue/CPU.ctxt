#BlueJ class context
comment0.params=
comment0.target=CPU()
comment0.text=\n\ Class\ constructor\n
comment1.params=jobID\ time_remaining\ cpuQuantumClock\ arriveTime\ CPU_time
comment1.target=void\ newJob(int,\ int,\ int,\ int,\ int)
comment1.text=\n\ Changes\ the\ status\ of\ the\ CPU\ when\ a\ new\ job\ arrives,\ all\ jobs\ go\ first\ in\ queue\ 1\n
comment10.params=
comment10.target=int\ getPID()
comment10.text=\n\ Returns\ the\ ID\ of\ the\ running\ job\n\ @return\ job\n
comment11.params=
comment11.target=int\ get_remaining_time()
comment11.text=\n\ \ Returns\ the\ time\ needed\ for\ the\ current\ job\ to\ finish\n\ \ @return\ time_remaining_to_complete\n
comment12.params=
comment12.target=int\ getCPUtime()
comment12.text=\n\ Returns\ the\ CPU\ time\ needed\n\ @return\ cpu_time\n
comment2.params=
comment2.target=boolean\ editQuantumClock()
comment2.text=\n\ Edits\ the\ Quantum\ clock\ for\ each\ second,\ return\ false\ if\ the\ current\ job\ finished\ and\ changes\ the\ busyFlag\n
comment3.params=level\ movedJob
comment3.target=void\ start_next_level(int,\ Job)
comment3.text=\n\ Starts\ the\ same\ job\ running\ at\ the\ next\ level\n\ @param\ level\n\ @param\ movedJob\n
comment4.params=level
comment4.target=int\ getQuantum_forLevel(int)
comment4.text=\n\ Extracts\ the\ quantum\ time\ for\ different\ level\n\ @param\ level\n
comment5.params=
comment5.target=int\ get_arrival_time()
comment5.text=\n\ Returns\ the\ arrival\ time\ of\ the\ job\n\ @return\n
comment6.params=
comment6.target=boolean\ getFlag()
comment6.text=\n\ Return\ if\ the\ CPU\ is\ busy\ at\ the\ moment\n\ @return\ busyFlag\n
comment7.params=lev
comment7.target=void\ setLevel(int)
comment7.text=\n\ Sets\ a\ new\ cpu\ level\n\ @param\ lev\n
comment8.params=
comment8.target=int\ getLevel()
comment8.text=\n\ If\ the\ CPU\ is\ busy\ returns\ the\ level\n\ @return\ currentLevel\n
comment9.params=
comment9.target=int\ getQuantumClock()
comment9.text=\n\ Returns\ quantum\ clock\ time\n\ @return\ QuantumClock\n
numComments=13
